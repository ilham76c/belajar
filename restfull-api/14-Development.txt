Kesalahan Ketika Membuat RESTful API
- Selalu membuat CRUD API untuk table di database
- Membuat response data sama dengan table di database
- Membuat API terlebih dahulu, baru mengerjakan Web atau Mobile menggunakan API yang sudah dibuat
- Mengembalikan data selengkap-lengkapnya di API
- Membuat API yang tidak dibutuhkan oleh Client


Tahapan Membuat RESTful API
[gambar]


Contoh: RESTful API Shopping Cart: Bussiness Flow
1. Customer menambahkan barang ke keranjang, bisa lebih dari satu barang
2. Customer membuka halaman keranjang, bisa mengubah data quantity barang
3. Customer memasukkan alamat pengiriman 
4, Customer menekan tombol order untuk membuat order


Contoh: RESTful API Shopping Cart: Screen
[gambar]


Contoh: RESTful API Shopping Cart: API Doc 
Product Detail:
- GET /products/{productId}
- POST /carts

Shopping Cart:
- GET /carts
- PATCH /carts/products
- PATCH /carts/products/{productId}

Shipping Address:
- GET /addresses
- POST /addresses
- PUT /carts/addresses
- POST /orders

Order Detail:
- GET /orders/{orderId}


Maintenance RESTful API
- Dalam membuat produk, fitur pasti akan selalu bertambah
- Tak jarang kita mungkin melakukan perubahan di screen Web atau Mobile yang sama 
- Oleh karena itu, maintenance RESTful API sangatlah penting, agar RESTful API kita tidak menjadi masalah di kemudian hari


Improvement di Client
[gambar]


Maintenance: Boleh dilakukan
- Menambah data baru di API yang sudah ada
- Menambah API baru di endpoint URL berbeda
- Mempercepat proses di API yang sudah ada
- Menggabungkan beberapa API menjadi satu, tanpa menghilangkan API lama

Maintenance: Tidak boleh dilakukan
- Mengubah total response data di API yang sudah ada 
- Mengubah field response data di API yang sudah ada
- Menghilangkan API yang sudah ada 
- Men-split API yang sudah ada menjadi dua atau lebih
- Menggabungkan beberapa API menjadi satu dengan menghapus API lama