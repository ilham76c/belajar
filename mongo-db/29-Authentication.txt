Authentication
- Authentication adalah proses memverifikasi identitas pengguna ketika mengakses MongoDB
- Saat menggunakan authentication, maka client wajib menggunakan username dan password untuk terkoneksi ke MongoDB Server
- MongoDB mendukung banyak mekanisme authentication, seperti:
    - SCRAM: https://tools.ietf.org/html/rfc5802 (standar)
    - Cretificate Authentication
    - LDAP
    - Kerberos, dan lain-lain


User
- Di MongoDB, kita bisa menambahkan user, dan juga menambahkan role ke user tersebut
- Saat kita membuat user, kita harus menentukan database sebagai authentication database
- Namun, bukan berarti user hanya bisa mengakses database itu saja, tapi user juga bisa mengakses database lain jika mau
- Nama user harus unik per database, namun jika database-nya berbeda, kita bisa membuat user dengan nama yang sama


User Function
db.createUser()          -> Membuat user
db.getUsers()            -> Mendapatkan semua user
db.dropUser()            -> Menghapus user
db.updateUser()          -> Mengupdate user
db.changeUserPassword()  -> Mengubah user password


Syntax User
// jika db-nya test makan akan membuat user di database test, jika db-nya admin makan akan membuat user di database admin
db.createUser({
  user: "user",
  pwd: "password",
  roles: [
    {
      role: "role",
      db: "database"
    },
    ...
  ]
})


Kode Program
// Use test database as authentication databae
// use test;

// Create user with access read only
db.createUser(
    {
        user: "contoh",
        pwd: "contoh", 
        roles: [
            { role: "read", db: "test" }
        ]
    }
)

// connect using
// mongo --username contoh --password contoh --authenticationDatabase test

// Create user with access read
db.createUser(
    {
        user: "contoh2",
        pwd: "contoh2", 
        roles: [
            { role: "readWrite", db: "test" }
        ]
    }
)

// connect using
// mongo --username contoh2 --password contoh2 --authenticationDatabase test

// Semua query di bawah hanya bisa dilakukan oleh user dengan role admin
// Get all users
db.getUsers()

// Change password for user contoh
db.changeUserPassword("contoh", "rahasia")

// Drop user contoh
db.dropUser("contoh")

// Update user
db.updateUser("contoh2",
    {
        roles: [
            { role: "readWrite", db: "test" }
        ]
    }
)